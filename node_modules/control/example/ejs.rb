task('mycluster', 'Config for my cluster', function () {
    var shared = Object.create(control.controller); 
    shared.enhance(['ejs', 'fpro', 'ecr']); // Need method to trigger logic
    shared.enhance = ['ejs', 'fpro', 'ecr']; // Only with defined setter

    var config = {
        'a.domain.com': {
            enhance = ['ejs'];
        },
        'b.domain.com': {

        }
    }
}

function enhance(enhancements) {
    var i, l, f;
    for (i = 0, l = enhancements.length; i < l; i += 1) {
        enhancement = enhancements[i];

        try { 
            enhancement = require('control-' + enhancement);
        } catch (e) {
            if (e.message && e.message.match(/Cannot find module/)) {
                // Get it from the directory of script execution control/ejs
                module.exports = require('./node-control');
            } else {
                throw e;
            }
        }

        // Slap all the methods experted by the enhancement onto the controller
        for (f in enhancement) {
            this[f.name] = f;
        }
    }
}

task('sequence', 'Upload file one controller at a time', funciton (controller) {
    function upload()  {
        controller.scp('a', 'b');
    }

    function continue() {
        controller.ssh('ls');
    }

    sequence(controller, upload, continue);
}


task('config:sshd', 'Confgure sshd from template', function (controller) {
    controller.template('~/sshd_template.ejs', '/etc/ssh/sshd_config', 
            function () {
    
    });
}
