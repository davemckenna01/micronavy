// Does not work and never will because there is no method_missing equivalent in Javasript to forward all calls, including those that were never defined on the object that are on or may come onto the prototype in the future.

/*global require, exports, process, console */

/*jslint nomen: false */

var d, e, f;

// Return a copy of a with prototype of b
function chain(a, b) {
    var prop, descriptor = {};
    for (prop in a) {
        if (a.hasOwnProperty(prop)) {
            descriptor[prop] = Object.getOwnPropertyDescriptor(a, prop);
        }
    }
    return Object.create(b, descriptor);
}

d = {};
d.x = 7;

e = {};
e.y = 8;
e = chain(e, d);

f = {};
f.z = 9;
f = chain(f, e);

console.log(f.x);
console.log(f.y);
console.log(f.z);

d.x = 12;
console.log(f.x);

e.y = 14;
console.log(f.y);

f.z = 16;
console.log(f.z);


